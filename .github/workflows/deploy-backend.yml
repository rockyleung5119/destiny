# .github/workflows/deploy-backend.yml

name: Deploy Backend to Cloudflare Workers

on:
  # 当代码被推送到 main 分支时触发
  push:
    branches:
      - main
    paths:
      - 'backend/**' # 仅当 backend 目录下的文件发生变化时才触发
      - '.github/workflows/deploy-backend.yml' # 工作流文件本身变化也触发

  # 允许您在 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境
    name: Deploy Backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # 第一步：拉取代码

      - name: Setup Node.js
        uses: actions/setup-node@v4 # 第二步：设置 Node.js 环境
        with:
          node-version: '20' # 使用 Node.js 20 版本

      - name: Prepare Backend
        run: |
          echo "🔧 Preparing backend for deployment..."
          cd backend
          
          # 检查必要文件
          echo "📋 Checking required files..."
          ls -la
          
          # 确保有正确的package.json
          if [ ! -f "package.json" ]; then
            if [ -f "workers-package.json" ]; then
              echo "📦 Using workers-package.json as package.json"
              cp workers-package.json package.json
            else
              echo "❌ No package.json found!"
              exit 1
            fi
          fi
          
          echo "📄 Package.json content:"
          cat package.json

      - name: Install Dependencies
        run: |
          cd backend
          echo "📦 Installing dependencies..."
          # 清理可能的缓存问题
          rm -rf node_modules package-lock.json || true
          # 安装依赖
          npm install
          echo "✅ Dependencies installed"

      - name: Validate Configuration
        run: |
          cd backend
          echo "🔍 Validating configuration..."
          
          # 检查TypeScript文件
          if [ -f "worker.ts" ]; then
            echo "✅ worker.ts found"
            echo "📊 Checking for Stripe integration..."
            grep -q "StripeAPIClient" worker.ts && echo "✅ Stripe API client found" || echo "⚠️ Stripe API client not found"
            grep -q "CloudflareStripeService" worker.ts && echo "✅ Stripe service found" || echo "⚠️ Stripe service not found"
          else
            echo "❌ worker.ts not found!"
            exit 1
          fi

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'backend'
          # 使用完整配置文件部署（包含Durable Objects和Queues）
          command: deploy --compatibility-date=2024-08-01 --minify=false --keep-vars

      - name: Verify Deployment
        run: |
          echo "🧪 Verifying deployment..."
          sleep 15  # 等待部署完全生效

          # 测试健康检查端点
          echo "📊 Testing health endpoint..."
          HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://destiny-backend.jerryliang5119.workers.dev/api/health)
          echo "Health response code: $HEALTH_RESPONSE"

          if [ "$HEALTH_RESPONSE" = "200" ]; then
            echo "✅ Health check passed"
          else
            echo "⚠️ Health check returned: $HEALTH_RESPONSE"
          fi

          # 测试Stripe健康检查端点
          echo "📊 Testing Stripe health endpoint..."
          STRIPE_HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://destiny-backend.jerryliang5119.workers.dev/api/stripe/health)
          echo "Stripe health response code: $STRIPE_HEALTH_RESPONSE"

          if [ "$STRIPE_HEALTH_RESPONSE" = "200" ]; then
            echo "✅ Stripe health check passed"
          else
            echo "⚠️ Stripe health check returned: $STRIPE_HEALTH_RESPONSE"
          fi

          echo "✅ Deployment verification completed!"

      - name: Deployment Success
        run: |
          echo "🎉 Backend deployment completed successfully!"
          echo ""
          echo "🔗 Backend URL: https://destiny-backend.jerryliang5119.workers.dev"
          echo "🔗 Health Check: https://destiny-backend.jerryliang5119.workers.dev/api/health"
          echo "🔗 Stripe Health: https://destiny-backend.jerryliang5119.workers.dev/api/stripe/health"
          echo ""
          echo "📋 Next steps:"
          echo "1. Configure Stripe environment variables if needed"
          echo "2. Test payment endpoints"
          echo "3. Monitor application logs with: wrangler tail"
